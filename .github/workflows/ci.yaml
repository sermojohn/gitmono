name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build message'
        required: false

jobs:
  validate:
    name: run pre-commit
    runs-on: ubuntu-20.04
    if: ${{ github.repository == 'sermojohn/gitmono' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - uses: actions/setup-go@v2
        with:
          stable: true
          go-version: '1.17'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/lint/golint@latest
          go install github.com/securego/gosec/v2/cmd/gosec@v2.7.0
          go install github.com/sqs/goreturns@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.40.0
      - uses: pre-commit/action@v2.0.3

  test:
    if: ${{ github.repository == 'sermojohn/gitmono' }}
    needs: [validate]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          stable: true
          go-version: '1.17'
      - name: test
        run: make test-cover
      - name: Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.out

  release:
    if: ${{ github.repository == 'sermojohn/gitmono' && github.event_name == 'push' }}
    needs: [test]
    runs-on: ubuntu-20.04
    concurrency: release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Binary build
        run: |
          make build
          chmod +x ./gitmono/gitmono

      - name: Release new version
        run: |
          git fetch origin --tags --unshallow
          git checkout ${GIT_COMMIT_HASH}
          ./gitmono/gitmono release -p . -c ${GIT_COMMIT_HASH} --commit-scheme=conventional --version-prefix=v
          git push --tags origin
          git clean -fd
        env:
          GIT_COMMIT_HASH: ${{ github.sha }}
          GIT_COMMITTER_NAME: ci
          GIT_COMMITTER_EMAIL: ci@gitmono.org

      - name: Deploy release
        run: |
          git clean -fd
          curl -sL https://git.io/goreleaser | bash -s -- --parallelism=2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
